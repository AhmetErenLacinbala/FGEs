var R=Object.defineProperty;var D=(e,r,s)=>r in e?R(e,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[r]=s;var l=(e,r,s)=>D(e,typeof r!="symbol"?r+"":r,s);(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))a(t);new MutationObserver(t=>{for(const i of t)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&a(n)}).observe(document,{childList:!0,subtree:!0});function s(t){const i={};return t.integrity&&(i.integrity=t.integrity),t.referrerPolicy&&(i.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?i.credentials="include":t.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function a(t){if(t.ep)return;t.ep=!0;const i=s(t);fetch(t.href,i)}})();const S=`struct TransformData{
    model: mat4x4<f32>,
    view: mat4x4<f32>,
    projection: mat4x4<f32>
}

@binding(0) @group(0) var<uniform> transformUBO: TransformData;

struct Fragment{
    @builtin(position) Position: vec4<f32>,
    @location(0) Color: vec4<f32>,
}

@vertex
fn vs_main(@location(0) vertexPosition: vec3<f32>, @location(1) vertexColor: vec3<f32>) -> Fragment {

    var output : Fragment;
    output.Position = transformUBO.projection * transformUBO.view * transformUBO.model* vec4<f32>(vertexPosition, 1.0);
    output.Color = vec4<f32>(vertexColor,1.);
    return output;
}

@fragment
fn fs_main(@location(0) Color: vec4<f32>) -> @location(0) vec4<f32>{
    return Color;
}`;class I{constructor(r){l(this,"buffer");l(this,"bufferLayout");const s=new Float32Array([0,0,.5,1,0,0,0,-.5,-.5,0,1,0,0,.5,-.5,0,0,1]),a=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,t={size:s.byteLength,usage:a,mappedAtCreation:!0};this.buffer=r.createBuffer(t),new Float32Array(this.buffer.getMappedRange()).set(s),this.buffer.unmap(),this.bufferLayout={arrayStride:6*4,attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x3",offset:3*4}]}}}var T=1e-6,z=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var e=0,r=arguments.length;r--;)e+=arguments[r]*arguments[r];return Math.sqrt(e)});function E(){var e=new z(16);return z!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function _(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function N(e,r,s,a){var t=a[0],i=a[1],n=a[2],u=Math.hypot(t,i,n),f,p,c,h,d,o,v,m,y,g,b,P,M,x,B,w,L,O,U,A,G,C,q,F;return u<T?null:(u=1/u,t*=u,i*=u,n*=u,f=Math.sin(s),p=Math.cos(s),c=1-p,h=r[0],d=r[1],o=r[2],v=r[3],m=r[4],y=r[5],g=r[6],b=r[7],P=r[8],M=r[9],x=r[10],B=r[11],w=t*t*c+p,L=i*t*c+n*f,O=n*t*c-i*f,U=t*i*c-n*f,A=i*i*c+p,G=n*i*c+t*f,C=t*n*c+i*f,q=i*n*c-t*f,F=n*n*c+p,e[0]=h*w+m*L+P*O,e[1]=d*w+y*L+M*O,e[2]=o*w+g*L+x*O,e[3]=v*w+b*L+B*O,e[4]=h*U+m*A+P*G,e[5]=d*U+y*A+M*G,e[6]=o*U+g*A+x*G,e[7]=v*U+b*A+B*G,e[8]=h*C+m*q+P*F,e[9]=d*C+y*q+M*F,e[10]=o*C+g*q+x*F,e[11]=v*C+b*q+B*F,r!==e&&(e[12]=r[12],e[13]=r[13],e[14]=r[14],e[15]=r[15]),e)}function V(e,r,s,a,t){var i=1/Math.tan(r/2),n;return e[0]=i/s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=i,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,t!=null&&t!==1/0?(n=1/(a-t),e[10]=(t+a)*n,e[14]=2*t*a*n):(e[10]=-1,e[14]=-2*a),e}var Y=V;function j(e,r,s,a){var t,i,n,u,f,p,c,h,d,o,v=r[0],m=r[1],y=r[2],g=a[0],b=a[1],P=a[2],M=s[0],x=s[1],B=s[2];return Math.abs(v-M)<T&&Math.abs(m-x)<T&&Math.abs(y-B)<T?_(e):(c=v-M,h=m-x,d=y-B,o=1/Math.hypot(c,h,d),c*=o,h*=o,d*=o,t=b*d-P*h,i=P*c-g*d,n=g*h-b*c,o=Math.hypot(t,i,n),o?(o=1/o,t*=o,i*=o,n*=o):(t=0,i=0,n=0),u=h*n-d*i,f=d*t-c*n,p=c*i-h*t,o=Math.hypot(u,f,p),o?(o=1/o,u*=o,f*=o,p*=o):(u=0,f=0,p=0),e[0]=t,e[1]=u,e[2]=c,e[3]=0,e[4]=i,e[5]=f,e[6]=h,e[7]=0,e[8]=n,e[9]=p,e[10]=d,e[11]=0,e[12]=-(t*v+i*m+n*y),e[13]=-(u*v+f*m+p*y),e[14]=-(c*v+h*m+d*y),e[15]=1,e)}class W{constructor(r){l(this,"canvas");l(this,"adaptor");l(this,"device");l(this,"context");l(this,"format");l(this,"uniformBuffer");l(this,"bindGroup");l(this,"pipeline");l(this,"triangleMesh");l(this,"t");l(this,"render",()=>{this.t+=.1,this.t>2*Math.PI&&(this.t=0);const r=E();Y(r,Math.PI/4,800/600,.1,10);const s=E();j(s,[-2,0,2],[0,0,0],[0,0,1]);const a=E();N(a,a,this.t,[0,0,1]),this.device.queue.writeBuffer(this.uniformBuffer,0,a),this.device.queue.writeBuffer(this.uniformBuffer,64,s),this.device.queue.writeBuffer(this.uniformBuffer,128,r);const t=this.device.createCommandEncoder(),i=this.context.getCurrentTexture().createView(),n=t.beginRenderPass({colorAttachments:[{view:i,clearValue:{r:.5,g:0,b:.25,a:1},loadOp:"clear",storeOp:"store"}]});n.setPipeline(this.pipeline),n.setBindGroup(0,this.bindGroup),n.setVertexBuffer(0,this.triangleMesh.buffer),n.draw(3,1,0,0),n.end(),this.device.queue.submit([t.finish()]),requestAnimationFrame(()=>this.render())});this.canvas=r,this.t=0}async init(){await this.setupDevice(),this.createAssets(),await this.setupPipeline(),this.render()}async setupDevice(){var s,a;this.adaptor=await((s=navigator.gpu)==null?void 0:s.requestAdapter()),this.device=await((a=this.adaptor)==null?void 0:a.requestDevice());const r=document.querySelector("#compcheck");if(this.adaptor)r.innerHTML="WebGPU is supported";else{r.innerHTML="WebGPU is not supported",console.error("WebGPU is not supported on this device!");return}this.context=this.canvas.getContext("webgpu"),this.format="bgra8unorm",this.context.configure({device:this.device,format:this.format,alphaMode:"opaque"})}async setupPipeline(){this.uniformBuffer=this.device.createBuffer({size:64*3,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});const r=this.device.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}}]});this.bindGroup=this.device.createBindGroup({layout:r,entries:[{binding:0,resource:{buffer:this.uniformBuffer}}]});const s=this.device.createPipelineLayout({bindGroupLayouts:[r]});this.pipeline=this.device.createRenderPipeline({layout:s,vertex:{module:this.device.createShaderModule({code:S}),entryPoint:"vs_main",buffers:[this.triangleMesh.bufferLayout]},fragment:{module:this.device.createShaderModule({code:S}),entryPoint:"fs_main",targets:[{format:this.format}]},primitive:{topology:"triangle-list"}})}createAssets(){this.triangleMesh=new I(this.device)}}const H=document.getElementById("gfx-main"),X=new W(H);X.init();
